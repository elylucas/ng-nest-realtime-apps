"use strict";(self.webpackChunkguide_generator=self.webpackChunkguide_generator||[]).push([[964],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:1},o="Getting Started",i={unversionedId:"lab2/getting_started",id:"lab2/getting_started",title:"Getting Started",description:"In this lab, we will build a multi-room chat app. A chat app is the",source:"@site/docs/lab2/getting_started.md",sourceDirName:"lab2",slug:"/lab2/getting_started",permalink:"/ng-nest-realtime-apps/lab2/getting_started",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Lab1 - Echo Client",permalink:"/ng-nest-realtime-apps/lab1"},next:{title:"Socket Connections",permalink:"/ng-nest-realtime-apps/lab2/SocketConnections"}},s={},p=[{value:"Scaffolding",id:"scaffolding",level:2},{value:"Scaffold Nest Parts",id:"scaffold-nest-parts",level:3},{value:"Scaffold Angular Parts",id:"scaffold-angular-parts",level:3},{value:"Start Server",id:"start-server",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"In this lab, we will build a multi-room chat app. A chat app is the\nquintessential demo app for real-time communications. And for good reasons! They\nare understood by most developers, fairly easy to implement and showcase many of\nthe concepts needed to build more sophisticated applications."),(0,r.kt)("p",null,"Our chat app will feature multiple rooms that people can join and leave, which\nwill help demonstrate sending messages to only particular groups."),(0,r.kt)("p",null,"Ready to get started? Great!"),(0,r.kt)("p",null,"First, make sure your current branch is clean, and then checkout the\n",(0,r.kt)("inlineCode",{parentName:"p"},"lab2-start")," branch:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout lab2-start\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can find a completed version of this lab in the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/elylucas/ng-nest-realtime-apps/tree/lab2-complete"},"lab2-complete"),"\nbranch.")),(0,r.kt)("p",null,"The starting branch contains the skeleton of the app we will use. On the client\nside, we will only use the home page powered by the app component. Most of the\nHTML and all of the CSS are already in the app component's style and template\nfiles. We'll modify the TypeScript file and update the template a bit as we\nbuild the app."),(0,r.kt)("h2",{id:"scaffolding"},"Scaffolding"),(0,r.kt)("h3",{id:"scaffold-nest-parts"},"Scaffold Nest Parts"),(0,r.kt)("p",null,"We will create two new Nest pieces, a ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatGateway")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatService"),". The\ngateway will be responsible for communicating with client apps via Socket.IO,\nand the service will be a data persistence and logic layer. The app will store\neverything in memory to keep things simple. So each time the server reboots, all\ndata will be lost. However, you could expand the service layer to persist the\nchat room information into something like a database."),(0,r.kt)("p",null,"Go into the ",(0,r.kt)("strong",{parentName:"p"},"server")," folder and run the following commands to generate the\nfiles:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=./server",title:"./server"},"nest g service chat\nnest g gateway chat\n")),(0,r.kt)("h3",{id:"scaffold-angular-parts"},"Scaffold Angular Parts"),(0,r.kt)("p",null,"We will create an Angular service to communicate with the backend and persist\nany client side state on the client side."),(0,r.kt)("p",null,"Move into the ",(0,r.kt)("strong",{parentName:"p"},"client")," folder and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=./client",title:"./client"},"ng g service chat\n")),(0,r.kt)("h2",{id:"start-server"},"Start Server"),(0,r.kt)("p",null,"Next, start the development server if you haven't already:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run start\n")),(0,r.kt)("p",null,"Let's get coding!"))}d.isMDXComponent=!0}}]);